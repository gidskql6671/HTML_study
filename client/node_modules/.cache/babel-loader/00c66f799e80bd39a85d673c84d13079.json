{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/web_study/src/practice.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\n/*eslint-disable*/\nimport React, { useState } from 'react';\nimport { Jumbotron, Button, Col, Row, Card, Container, Navbar, Nav } from 'react-bootstrap';\nimport './App.css';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport datas from './data.js';\nimport Detail from './detail.js';\nexport function TestPost() {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n  let [inputValue, setInputValue] = useState({});\n\n  function changeInput(e) {\n    let {\n      name,\n      value\n    } = e.target;\n    /* 새로운 오브젝트를 만들어서 업데이트 */\n    // let newObject = {...inputValue};\n    // newObject[name] = value;\n    // setInputValue(newObject);\n\n    /* 비구조화 할당을 통한 업데이트 */\n\n    setInputValue({ ...inputValue,\n      [name]: value\n    });\n  }\n\n  function createPost() {\n    let newArray = [...posts];\n    let {\n      name,\n      contents\n    } = { ...inputValue\n    };\n    newArray.push({\n      name: name,\n      contents: contents\n    });\n    setPosts(newArray);\n  }\n\n  function deletePost(i) {\n    console.log(i);\n    let newArray = [...posts];\n    newArray.splice(i, 1);\n    setPosts(newArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \\uAE00 \\uC81C\\uBAA9 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        onChange: changeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \\uAE00 \\uB0B4\\uC6A9 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"contents\",\n        onChange: changeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        children: \" \\uAE00 \\uC0DD\\uC131 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), posts.map(function (data, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", data.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", data.contents, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            deletePost(i);\n          },\n          children: \" \\uC0AD\\uC81C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TestPost, \"eKM51h3F5t6l2ewExQkcdLNNLpM=\");\n\n_c = TestPost;\nexport function Modal(props) {\n  let {\n    data,\n    num\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data[num]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n}\n_c2 = Modal;\nexport function TestModal() {\n  _s2();\n\n  let [modal, setmodal] = useState(false);\n  let [seletedNumber, setSeletedNumber] = useState(0);\n  let [testData, setTestData] = useState([\"aaaaa\", \"bbbbbb\", \"cccccc\"]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: testData.map(function (data, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          onClick: () => {\n            setSeletedNumber(i);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 8\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setmodal(data => !data);\n      },\n      children: \" ON \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), modal === true ? /*#__PURE__*/_jsxDEV(Modal, {\n      data: testData,\n      num: seletedNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(TestModal, \"FdTNbJ6hLYxtwY62o4XrUAEbass=\");\n\n_c3 = TestModal;\nexport function TestUseState() {\n  _s3();\n\n  let [test, setTest] = useState(0);\n  let [a, setA] = useState([1, 2]);\n\n  function asd(i) {\n    let newArray = [...a];\n    newArray[i] += 1;\n    setA(newArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => {\n          setTest(data => data + 1);\n        },\n        children: \"Click : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), \"  \", test]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => {\n        asd(0);\n      },\n      children: \"aaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => {\n        asd(1);\n      },\n      children: \"bbbbbbbb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: a[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: a[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(TestUseState, \"lA17tfN+1uWpknliJd0T0m4UMgg=\");\n\n_c4 = TestUseState;\nexport function TestInput1() {\n  _s4();\n\n  let [inputValue, setInputValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        setInputValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" input \\uAC12 : \", inputValue, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 3\n  }, this);\n}\n\n_s4(TestInput1, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n\n_c5 = TestInput1;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TestPost\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"TestModal\");\n$RefreshReg$(_c4, \"TestUseState\");\n$RefreshReg$(_c5, \"TestInput1\");","map":{"version":3,"sources":["/workspace/web_study/src/practice.js"],"names":["React","useState","Jumbotron","Button","Col","Row","Card","Container","Navbar","Nav","BrowserRouter","Link","Route","Switch","datas","Detail","TestPost","posts","setPosts","inputValue","setInputValue","changeInput","e","name","value","target","createPost","newArray","contents","push","deletePost","i","console","log","splice","map","data","Modal","props","num","TestModal","modal","setmodal","seletedNumber","setSeletedNumber","testData","setTestData","TestUseState","test","setTest","a","setA","asd","TestInput1"],"mappings":"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","sourcesContent":["/*eslint-disable*/\n\nimport React, {useState} from 'react';\nimport { Jumbotron, Button, Col, Row, Card, Container, Navbar, Nav } from 'react-bootstrap';\nimport './App.css';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\n\nimport datas from './data.js';\nimport Detail from './detail.js';\n\nexport function TestPost(){\n\tlet [posts, setPosts] = useState([]);\n\tlet [inputValue, setInputValue] = useState({});\n\t\n\t\n\tfunction changeInput(e){\n\t\tlet {name, value} = e.target;\n\t\t\n\t\t/* 새로운 오브젝트를 만들어서 업데이트 */\n\t\t// let newObject = {...inputValue};\n\t\t// newObject[name] = value;\n\t\t// setInputValue(newObject);\n\t\t\n\t\t/* 비구조화 할당을 통한 업데이트 */\n\t\tsetInputValue(\n\t\t\t{\n\t\t\t\t...inputValue,\n\t\t\t\t[name]: value\n\t\t\t}\n\t\t);\n\t}\n\tfunction createPost(){\n\t\tlet newArray = [...posts];\n\t\tlet {name, contents} = {...inputValue};\n\t\t\n\t\tnewArray.push({name: name, contents: contents});\n\t\tsetPosts(newArray);\n\t}\n\tfunction deletePost(i){\n\t\tconsole.log(i);\n\t\tlet newArray = [...posts];\n\t\tnewArray.splice(i, 1);\n\t\tsetPosts(newArray);\n\t}\n\t\n\t\n\t\n\treturn(\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<span> 글 제목 : </span> <input name=\"name\" onChange={changeInput} />\n\t\t\t\t<span> 글 내용 : </span> <input name=\"contents\" onChange={changeInput} />\n\t\t\t\t<button onClick={createPost}> 글 생성 </button>\n\t\t\t</div>\n\t\t\t\n\t\t\t{posts.map(function(data, i){\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"post\" key={i}>\n\t\t\t\t\t\t<h3> {data.name} </h3>\n\t\t\t\t\t\t<p> {data.contents} </p>\n\t\t\t\t\t\t<button onClick={(e)=>{deletePost(i)}}> 삭제 </button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport function Modal(props){\n\tlet {data, num} = props;\n\t\n\treturn(\n\t\t<div className=\"modal\">\n\t\t\t<h2>{data[num]}</h2>\n\t\t\t<p>날짜</p>\n\t\t\t<p>상세내용</p>\n\t\t</div>\n\t);\n}\nexport function TestModal(){\n\tlet [modal, setmodal] = useState(false);\n\tlet [seletedNumber, setSeletedNumber] = useState(0);\n\tlet [testData, setTestData] = useState([\"aaaaa\", \"bbbbbb\", \"cccccc\"]);\n\t\n\treturn(\n\t\t<div>\n\t\t\t<div>\n\t\t\t{\n\t\t\t\ttestData.map(function(data, i){\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div className=\"post\" key={i} onClick={()=>{setSeletedNumber(i)}}>\n\t\t\t\t\t\t\t<h3>{data}</h3>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t\t</div>\n\t\t\t<button onClick={()=>{setmodal(data=>!data)}}> ON </button>\n\t\t\t{\n\t\t\t\tmodal === true\n\t\t\t\t? <Modal data={testData} num={seletedNumber}></Modal>\n\t\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport function TestUseState(){\n\tlet [test, setTest] = useState(0);\n\tlet [a, setA] = useState([1,2]);\n\t\n\tfunction asd(i){\n\t\tlet newArray = [...a];\n\t\tnewArray[i] += 1;\n\t\tsetA(newArray);\n\t}\n\t\n\treturn(\n\t\t<div>\n\t\t\t<p><span onClick={()=>{setTest(data=>data+1)}}>Click : </span>  {test}</p>\n\n\t\t\t<p onClick={()=>{asd(0);}}>aaaaaaaa</p>\n\t\t\t<p onClick={()=>{asd(1);}}>bbbbbbbb</p>\n\t\t\t<p>{a[0]}</p>\n\t\t\t<p>{a[1]}</p>\n\t\t</div>\n\t);\n}\n\nexport function TestInput1(){\n\tlet [inputValue, setInputValue] = useState(\"\");\n\t\n\treturn(\n\t\t<div>\n\t\t\t<input onChange={(e)=>{ setInputValue(e.target.value) }} />\n\t\t\t\n\t\t\t<p> input 값 : {inputValue} </p>\n\t\t</div>\n\t);\n}\n\n"]},"metadata":{},"sourceType":"module"}