{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/workspace/web_study/src/practice.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\n/*eslint-disable*/\nimport React, { useState } from 'react';\nimport { Jumbotron, Button, Col, Row, Card, Container, Navbar, Nav } from 'react-bootstrap';\nimport './App.scss';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport datas from './practice-data.js';\nimport Detail from './practice-detail.js';\nexport function TestRouter() {\n  _s();\n\n  let [post, setPost] = useState(datas); // option 값에 따라 content를 정렬. 0일시 title, 1일시 id\n\n  function sortContent(params) {\n    let {\n      option\n    } = params;\n    let newPost = [...post];\n\n    if (option == 0) {\n      newPost.sort((data1, data2) => {\n        let d1 = data1.title.toUpperCase();\n        let d2 = data2.title.toUpperCase();\n        if (d1 < d2) return -1;else return 1;\n      });\n    } else if (option == 1) {\n      newPost.sort((data1, data2) => {\n        return data1.id - data2.id;\n      });\n    }\n\n    setPost(newPost);\n  } //\n\n\n  function fecthDatas() {\n    axios.get('https://codingapple1.github.io/shop/data2.json').then(result => {\n      setPost(prev => [...prev, ...result.data]);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: \"Nav-Bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"mr-auto\",\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            as: Link,\n            to: \"/\",\n            children: \" home \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n          className: \"siteJumbotron\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Hello, world!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Learn more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"m-3\",\n            onClick: () => {\n              sortContent({\n                option: 0\n              });\n            },\n            children: \" Sort by Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"m-3\",\n            onClick: () => {\n              sortContent({\n                option: 1\n              });\n            },\n            children: \" Sort by id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: fecthDatas,\n          children: \" \\uB354\\uBCF4\\uAE30 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        children: /*#__PURE__*/_jsxDEV(Detail, {\n          post: post,\n          setPost: setPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 2\n  }, this);\n}\n\n_s(TestRouter, \"sjTYXvbVJ5HvjelZq0DyxngrE9I=\");\n\n_c = TestRouter;\n\nfunction CardContent(props) {\n  _s2();\n\n  let {\n    post\n  } = props;\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: post.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\" \", data.title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                  className: \"mb-2 text-muted\",\n                  children: data.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: data.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    history.push(\"/detail/\" + data.id);\n                  },\n                  children: \" Detail \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 10\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(CardContent, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", true);\n\n_c2 = CardContent;\nexport function TestPost() {\n  _s3();\n\n  let [posts, setPosts] = useState([]);\n  let [inputValue, setInputValue] = useState({});\n\n  function changeInput(e) {\n    let {\n      name,\n      value\n    } = e.target;\n    /* 새로운 오브젝트를 만들어서 업데이트 */\n    // let newObject = {...inputValue};\n    // newObject[name] = value;\n    // setInputValue(newObject);\n\n    /* 비구조화 할당을 통한 업데이트 */\n\n    setInputValue({ ...inputValue,\n      [name]: value\n    });\n  }\n\n  function createPost() {\n    let newArray = [...posts];\n    let {\n      name,\n      contents\n    } = { ...inputValue\n    };\n    newArray.push({\n      name: name,\n      contents: contents\n    });\n    setPosts(newArray);\n  }\n\n  function deletePost(i) {\n    console.log(i);\n    let newArray = [...posts];\n    newArray.splice(i, 1);\n    setPosts(newArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \\uAE00 \\uC81C\\uBAA9 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        onChange: changeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \\uAE00 \\uB0B4\\uC6A9 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"contents\",\n        onChange: changeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        children: \" \\uAE00 \\uC0DD\\uC131 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }, this), posts.map(function (data, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", data.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", data.contents, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            deletePost(i);\n          },\n          children: \" \\uC0AD\\uC81C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 6\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(TestPost, \"eKM51h3F5t6l2ewExQkcdLNNLpM=\");\n\n_c3 = TestPost;\nexport function Modal(props) {\n  let {\n    data,\n    num\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data[num]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 3\n  }, this);\n}\n_c4 = Modal;\nexport function TestModal() {\n  _s4();\n\n  let [modal, setmodal] = useState(false);\n  let [seletedNumber, setSeletedNumber] = useState(0);\n  let [testData, setTestData] = useState([\"aaaaa\", \"bbbbbb\", \"cccccc\"]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: testData.map(function (data, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          onClick: () => {\n            setSeletedNumber(i);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 8\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setmodal(data => !data);\n      },\n      children: \" ON \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 4\n    }, this), modal === true ? /*#__PURE__*/_jsxDEV(Modal, {\n      data: testData,\n      num: seletedNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 3\n  }, this);\n}\n\n_s4(TestModal, \"FdTNbJ6hLYxtwY62o4XrUAEbass=\");\n\n_c5 = TestModal;\nexport function TestUseState() {\n  _s5();\n\n  let [test, setTest] = useState(0);\n  let [a, setA] = useState([1, 2]);\n\n  function asd(i) {\n    let newArray = [...a];\n    newArray[i] += 1;\n    setA(newArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => {\n          setTest(data => data + 1);\n        },\n        children: \"Click : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this), \"  \", test]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => {\n        asd(0);\n      },\n      children: \"aaaaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => {\n        asd(1);\n      },\n      children: \"bbbbbbbb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: a[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: a[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 3\n  }, this);\n}\n\n_s5(TestUseState, \"lA17tfN+1uWpknliJd0T0m4UMgg=\");\n\n_c6 = TestUseState;\nexport function TestInput1() {\n  _s6();\n\n  let [inputValue, setInputValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        setInputValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" input \\uAC12 : \", inputValue, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 3\n  }, this);\n}\n\n_s6(TestInput1, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n\n_c7 = TestInput1;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"TestRouter\");\n$RefreshReg$(_c2, \"CardContent\");\n$RefreshReg$(_c3, \"TestPost\");\n$RefreshReg$(_c4, \"Modal\");\n$RefreshReg$(_c5, \"TestModal\");\n$RefreshReg$(_c6, \"TestUseState\");\n$RefreshReg$(_c7, \"TestInput1\");","map":{"version":3,"sources":["/workspace/web_study/src/practice.js"],"names":["React","useState","Jumbotron","Button","Col","Row","Card","Container","Navbar","Nav","BrowserRouter","Link","Route","Switch","datas","Detail","TestRouter","post","setPost","sortContent","params","option","newPost","sort","data1","data2","d1","title","toUpperCase","d2","id","fecthDatas","axios","get","then","result","prev","data","catch","e","console","log","CardContent","props","history","useHistory","map","i","price","content","push","TestPost","posts","setPosts","inputValue","setInputValue","changeInput","name","value","target","createPost","newArray","contents","deletePost","splice","Modal","num","TestModal","modal","setmodal","seletedNumber","setSeletedNumber","testData","setTestData","TestUseState","test","setTest","a","setA","asd","TestInput1"],"mappings":"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","sourcesContent":["/*eslint-disable*/\n\nimport React, {useState} from 'react';\nimport { Jumbotron, Button, Col, Row, Card, Container, Navbar, Nav } from 'react-bootstrap';\nimport './App.scss';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\n\nimport datas from './practice-data.js';\nimport Detail from './practice-detail.js';\n\n\n\nexport function TestRouter(){\n\tlet [post, setPost] = useState(datas);\n\t\n\t\n\t// option 값에 따라 content를 정렬. 0일시 title, 1일시 id\n\tfunction sortContent(params){\n\t\tlet {option} = params;\n\t\tlet newPost = [...post];\n\t\t\n\t\tif (option == 0){\n\t\t\tnewPost.sort((data1, data2)=>{\n\t\t\t\tlet d1 = data1.title.toUpperCase();\n\t\t\t\tlet d2 = data2.title.toUpperCase();\n\n\t\t\t\tif (d1 < d2)\n\t\t\t\t\treturn -1;\n\t\t\t\telse\n\t\t\t\t\treturn 1;\n\t\t\t})\n\t\t}\n\t\telse if (option == 1){\n\t\t\tnewPost.sort((data1, data2)=>{\n\t\t\t\treturn data1.id - data2.id;\n\t\t\t})\n\t\t}\n\t\t\n\t\tsetPost(newPost);\n\t}\n\t\n\t//\n\tfunction fecthDatas(){\n\t\taxios.get('https://codingapple1.github.io/shop/data2.json')\n\t\t.then((result)=>{ setPost(prev => [...prev, ...result.data]) })\n\t\t.catch((e) => {console.log(e)});\n\t}\n\t\n\treturn(\n\t<div>\n\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t<Navbar.Brand href=\"#home\">Nav-Bar</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<Nav.Link as={Link} to=\"/\"> home </Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t\t\n\t\t<Switch>\n\t\t\t<Route path=\"/\" exact>\n\t\t\t\t<Jumbotron className=\"siteJumbotron\">\n\t\t\t\t\t<h1>Hello, world!</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\tThis is a simple hero unit, a simple jumbotron-style component for calling\n\t\t\t\t\textra attention to featured content or information.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Button variant=\"primary\">Learn more</Button>\n\t\t\t\t\t</p>\n\t\t\t\t</Jumbotron>\n\t\t\t\t<div>\n\t\t\t\t\t<Button variant=\"primary\" className=\"m-3\" onClick={() => {sortContent({option: 0})}}> Sort by Title</Button>\n\t\t\t\t\t<Button variant=\"primary\" className=\"m-3\" onClick={() => {sortContent({option: 1})}}> Sort by id</Button>\n\t\t\t\t</div>\n\t\t\t\t\t<CardContent post={post} />\n\t\t\t\t<Button variant=\"primary\" onClick={fecthDatas}> 더보기 </Button>\n\t\t\t</Route>\n\t\t\t<Route path=\"/detail/:id\">\n\t\t\t\t<Detail post={post} setPost={setPost}/>\n\t\t\t</Route>\n\t\t</Switch>\n\t\t\n\t</div>\n\t);\n}\n\nfunction CardContent(props){\n\tlet {post} = props;\n\tlet history = useHistory();\n\t\n\treturn(\n\t\t<div>\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t{\n\t\t\t\t\t\tpost.map((data, i) => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<Col md={4} key={i}> \n\t\t\t\t\t\t\t\t\t<Card><Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Card.Title> {data.title} </Card.Title>\n\t\t\t\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">{data.price}</Card.Subtitle>\n\t\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t{data.content}\n\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={()=>{history.push(\"/detail/\" + data.id)}}> Detail </Button>\n\t\t\t\t\t\t\t\t\t</Card.Body></Card>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n\n}\n\nexport function TestPost(){\n\tlet [posts, setPosts] = useState([]);\n\tlet [inputValue, setInputValue] = useState({});\n\t\n\t\n\tfunction changeInput(e){\n\t\tlet {name, value} = e.target;\n\t\t\n\t\t/* 새로운 오브젝트를 만들어서 업데이트 */\n\t\t// let newObject = {...inputValue};\n\t\t// newObject[name] = value;\n\t\t// setInputValue(newObject);\n\t\t\n\t\t/* 비구조화 할당을 통한 업데이트 */\n\t\tsetInputValue(\n\t\t\t{\n\t\t\t\t...inputValue,\n\t\t\t\t[name]: value\n\t\t\t}\n\t\t);\n\t}\n\tfunction createPost(){\n\t\tlet newArray = [...posts];\n\t\tlet {name, contents} = {...inputValue};\n\t\t\n\t\tnewArray.push({name: name, contents: contents});\n\t\tsetPosts(newArray);\n\t}\n\tfunction deletePost(i){\n\t\tconsole.log(i);\n\t\tlet newArray = [...posts];\n\t\tnewArray.splice(i, 1);\n\t\tsetPosts(newArray);\n\t}\n\t\n\t\n\t\n\treturn(\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<span> 글 제목 : </span> <input name=\"name\" onChange={changeInput} />\n\t\t\t\t<span> 글 내용 : </span> <input name=\"contents\" onChange={changeInput} />\n\t\t\t\t<button onClick={createPost}> 글 생성 </button>\n\t\t\t</div>\n\t\t\t\n\t\t\t{posts.map(function(data, i){\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"post\" key={i}>\n\t\t\t\t\t\t<h3> {data.name} </h3>\n\t\t\t\t\t\t<p> {data.contents} </p>\n\t\t\t\t\t\t<button onClick={(e)=>{deletePost(i)}}> 삭제 </button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport function Modal(props){\n\tlet {data, num} = props;\n\t\n\treturn(\n\t\t<div className=\"modal\">\n\t\t\t<h2>{data[num]}</h2>\n\t\t\t<p>날짜</p>\n\t\t\t<p>상세내용</p>\n\t\t</div>\n\t);\n}\nexport function TestModal(){\n\tlet [modal, setmodal] = useState(false);\n\tlet [seletedNumber, setSeletedNumber] = useState(0);\n\tlet [testData, setTestData] = useState([\"aaaaa\", \"bbbbbb\", \"cccccc\"]);\n\t\n\treturn(\n\t\t<div>\n\t\t\t<div>\n\t\t\t{\n\t\t\t\ttestData.map(function(data, i){\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div className=\"post\" key={i} onClick={()=>{setSeletedNumber(i)}}>\n\t\t\t\t\t\t\t<h3>{data}</h3>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t\t</div>\n\t\t\t<button onClick={()=>{setmodal(data=>!data)}}> ON </button>\n\t\t\t{\n\t\t\t\tmodal === true\n\t\t\t\t? <Modal data={testData} num={seletedNumber}></Modal>\n\t\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport function TestUseState(){\n\tlet [test, setTest] = useState(0);\n\tlet [a, setA] = useState([1,2]);\n\t\n\tfunction asd(i){\n\t\tlet newArray = [...a];\n\t\tnewArray[i] += 1;\n\t\tsetA(newArray);\n\t}\n\t\n\treturn(\n\t\t<div>\n\t\t\t<p><span onClick={()=>{setTest(data=>data+1)}}>Click : </span>  {test}</p>\n\n\t\t\t<p onClick={()=>{asd(0);}}>aaaaaaaa</p>\n\t\t\t<p onClick={()=>{asd(1);}}>bbbbbbbb</p>\n\t\t\t<p>{a[0]}</p>\n\t\t\t<p>{a[1]}</p>\n\t\t</div>\n\t);\n}\n\nexport function TestInput1(){\n\tlet [inputValue, setInputValue] = useState(\"\");\n\t\n\treturn(\n\t\t<div>\n\t\t\t<input onChange={(e)=>{ setInputValue(e.target.value) }} />\n\t\t\t\n\t\t\t<p> input 값 : {inputValue} </p>\n\t\t</div>\n\t);\n}\n\n"]},"metadata":{},"sourceType":"module"}